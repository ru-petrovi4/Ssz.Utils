<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:converters="clr-namespace:Fluent.Converters"
                    xmlns:styleSelectors="clr-namespace:Fluent.StyleSelectors">
    <ControlTemplate x:Key="Fluent.Ribbon.Templates.BackstageTabControl.Button"
                     TargetType="{x:Type Fluent:Button}">
        <Grid Background="Transparent">
            <Border x:Name="border"
                    Background="{TemplateBinding Fluent:RibbonProperties.MouseOverBackground}"
                    Visibility="Collapsed" />
            <StackPanel Margin="25 0 15 0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Orientation="Horizontal">
                <Fluent:IconPresenter x:Name="iconImage"
                                      Margin="0 0 8 0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      IconSize="{Binding Path=(Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                      SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />

                <ContentControl x:Name="controlLabel"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Header}"
                                Focusable="False">
                    <ContentControl.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                            <Setter Property="TextWrapping" Value="NoWrap" />
                        </Style>
                    </ContentControl.Resources>
                </ContentControl>
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="controlLabel" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Fluent.Ribbon.Styles.BackstageTabControl.Button"
           TargetType="{x:Type Fluent:Button}">
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
        <Setter Property="Fluent:RibbonProperties.MouseOverBackground" Value="{DynamicResource Fluent.Ribbon.Brushes.BackstageTabItem.MouseOver.Background}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}" />
        <Setter Property="Height" Value="38" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.BackstageTabControl.Button}" />
    </Style>

    <ControlTemplate x:Key="BackstageBackButtonTemplate"
                     TargetType="Button">
        <Grid x:Name="ContentGrid"
              Fluent:FrameworkHelper.UseLayoutRounding="False"
              Background="Transparent">
            <ContentControl Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Left"
                            Focusable="False">
                <Grid>
                    <Path x:Name="arrowpath"
                          Width="16"
                          Height="12"
                          Data="F1 M 36,22L 36,26L 19.75,26L 27,33L 20.5,33L 11,24L 20.5,15L 27,15L 19.75,22L 36,22 Z "
                          Fill="{TemplateBinding Foreground}"
                          Stretch="Uniform" />

                    <Ellipse x:Name="backellipse"
                             Width="34"
                             Height="34"
                             Stroke="{TemplateBinding Foreground}"
                             StrokeThickness="2" />

                    <Path Width="Auto"
                          Margin="0"
                          HorizontalAlignment="Stretch"
                          Data="M0,0 C0,35 0,35 0,35 C0,35 35,35 35,35 L35,0 z"
                          Fill="Transparent"
                          Stretch="None" />
                </Grid>
            </ContentControl>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="ContentGrid" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="arrowpath" Property="Opacity" Value="0.5" />
                <Setter TargetName="backellipse" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentGrid" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="arrowpath" Property="Opacity" Value="0.5" />
                <Setter TargetName="backellipse" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BackstageBackButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Backstage.BackButton.Background}" />
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.Backstage.BackButton.Foreground}" />
        <Setter Property="Height" Value="48" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{DynamicResource BackstageBackButtonTemplate}" />
    </Style>

    <Style x:Key="Fluent.Ribbon.Styles.BackstageTabControl.SeparatorTabItem"
           TargetType="{x:Type Fluent:SeparatorTabItem}">
        <Setter Property="DockPanel.Dock" Value="Top" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="25 10 20 10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:SeparatorTabItem}">
                    <StackPanel>
                        <TextBlock x:Name="header"
                                   Margin="10 5"
                                   VerticalAlignment="Center"
                                   FontSize="14"
                                   FontWeight="SemiBold"
                                   Foreground="{DynamicResource Fluent.Ribbon.Brushes.IdealForegroundColorBrush}"
                                   Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                                   TextWrapping="Wrap"
                                   Visibility="Visible" />
                        <Line Height="1"
                              MinWidth="75"
                              Stretch="Uniform"
                              Stroke="{DynamicResource HighTransparentWhiteBrush}"
                              X2="1" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasHeader" Value="False">
                            <Setter TargetName="header" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="BackstageControlTemplate"
                     TargetType="{x:Type Fluent:BackstageTabControl}">
        <ControlTemplate.Resources>
            <ResourceDictionary>
                <Style x:Key="{x:Type ScrollBar}"
                       BasedOn="{StaticResource ScrollBarWhite}"
                       TargetType="{x:Type ScrollBar}" />

                <Style x:Key="{x:Type Fluent:Button}"
                       BasedOn="{StaticResource Fluent.Ribbon.Styles.Backstage.Button}"
                       TargetType="{x:Type Fluent:Button}" />
                <Style x:Key="{x:Type Fluent:ToggleButton}"
                       BasedOn="{StaticResource Fluent.Ribbon.Styles.Backstage.ToggleButton}"
                       TargetType="{x:Type Fluent:ToggleButton}" />
                <Style x:Key="{x:Type Fluent:DropDownButton}"
                       BasedOn="{StaticResource Fluent.Ribbon.Styles.Backstage.DropDownButton}"
                       TargetType="{x:Type Fluent:DropDownButton}" />
                <Style x:Key="{x:Type Fluent:ComboBox}"
                       BasedOn="{StaticResource Fluent.Ribbon.Styles.Backstage.ComboBox}"
                       TargetType="{x:Type Fluent:ComboBox}" />
            </ResourceDictionary>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"
                                  MinWidth="{TemplateBinding ItemsPanelMinWidth}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid x:Name="PART_ItemsPanelContainer"
                  VerticalAlignment="Stretch"
                  Background="{DynamicResource WhiteBrush}">
                <Grid Background="{TemplateBinding ItemsPanelBackground}"
                      KeyboardNavigation.DirectionalNavigation="Cycle">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Fluent:WindowSteeringHelperControl Grid.RowSpan="2"
                                                        Height="{Binding SelectedContentMargin.Top, RelativeSource={RelativeSource TemplatedParent}}"
                                                        VerticalAlignment="Top"
                                                        IsEnabled="{TemplateBinding IsWindowSteeringHelperEnabled}" />

                    <Button x:Name="backbutton"
                            Grid.Row="0"
                            Padding="22 7 0 7"
                            VerticalAlignment="Top"
                            Command="{x:Static Fluent:RibbonCommands.OpenBackstage}"
                            Style="{DynamicResource BackstageBackButtonStyle}"
                            Visibility="{Binding Path=IsBackButtonVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToVisibilityConverter}}">
                        <Button.Margin>
                            <MultiBinding Converter="{x:Static converters:StaticConverters.ThicknessConverter}">
                                <Binding Source="0" />
                                <Binding FallbackValue="0"
                                         Path="TitleBar.ActualHeight"
                                         RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Fluent:IRibbonWindow}}" />
                                <Binding Source="0" />
                                <Binding Source="0" />
                            </MultiBinding>
                        </Button.Margin>
                    </Button>

                    <ItemsPresenter Grid.Row="1"
                                    Height="Auto" />
                </Grid>
            </Grid>

            <Grid x:Name="PART_SelectedContentGrid"
                  Grid.Column="1"
                  Height="Auto"
                  Margin="{TemplateBinding SelectedContentMargin}"
                  Background="{DynamicResource WhiteBrush}">
                <Border Background="{TemplateBinding Background}">
                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                      Height="Auto"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      ContentSource="SelectedContent" />
                </Border>
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="BackstageStyle"
           TargetType="{x:Type Fluent:BackstageTabControl}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ControlStyleEmptyFocus}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="ItemContainerStyleSelector" Value="{x:Static styleSelectors:BackstageTabControlItemContainerStyleSelector.Instance}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel LastChildFill="False" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanelBackground" Value="{DynamicResource Fluent.Ribbon.Brushes.BackstageTabControl.ItemsPanelBackground}" />
        <Setter Property="SelectedContentMargin">
            <Setter.Value>
                <MultiBinding Converter="{x:Static converters:StaticConverters.ThicknessConverter}">
                    <Binding Source="0" />
                    <Binding FallbackValue="0"
                             Path="TitleBar.ActualHeight"
                             RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Fluent:IRibbonWindow}}" />
                    <Binding Source="0" />
                    <Binding Source="0" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{DynamicResource BackstageControlTemplate}" />
    </Style>
</ResourceDictionary>