<fluent:RibbonWindow x:Class="Ssz.Operator.Design.Core.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"              
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit/Ssz"
              xmlns:controls="clr-namespace:Ssz.Operator.Design.Core.Controls"
              xmlns:local="clr-namespace:Ssz.Operator.Design.Core"
              xmlns:p="clr-namespace:Ssz.Operator.Design.Core.Properties"
              xmlns:fluent="urn:fluent-ribbon"
              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Ssz.Operator.Design.ico"
              xmlns:properties="clr-namespace:Ssz.Operator.Core.Properties;assembly=Ssz.Operator.Core"              
              xmlns:visualEditors="clr-namespace:Ssz.Operator.Core.VisualEditors;assembly=Ssz.Operator.Core"              
              xmlns:common="clr-namespace:Ssz.Operator.Core;assembly=Ssz.Operator.Core"
              xmlns:controlsDesign="clr-namespace:Ssz.Operator.Core.ControlsDesign;assembly=Ssz.Operator.Core"
              xmlns:avalondock="http://schemas.xceed.com/wpf/xaml/avalondock"              
              Title="{Binding Title}"                
              WindowState="Maximized">
    <!--
    <fluent:RibbonWindow.Resources>
        <Style TargetType="{x:Type fluent:RibbonTitleBar}">            
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <controls:TextBlockTrimmer EllipsisPosition="Start"                               
                               TextBlockText="{Binding}">
                            <TextBlock 
                               Text="{Binding TextBlockText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:TextBlockTrimmer}}}"                               
                               TextWrapping="NoWrap"
                               TextTrimming="CharacterEllipsis" />
                        </controls:TextBlockTrimmer>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </fluent:RibbonWindow.Resources>-->
    <fluent:RibbonWindow.LayoutTransform>
        <ScaleTransform ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
    </fluent:RibbonWindow.LayoutTransform>    
    <xctk:BusyIndicator x:Name="MainBusyIndicator" IsBusy="{Binding IsBusy}" DisplayAfter="0:0:0.400">
        <xctk:BusyIndicator.BusyContentTemplate>
            <DataTemplate>
                <Grid Width="180">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="0,5,0,0" Grid.Row="0" Text="{Binding DataContext.BusyHeader,
        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xctk:BusyIndicator}}}" HorizontalAlignment="Center"
                                   FontWeight="Bold" TextWrapping="Wrap" />
                    <TextBlock Margin="0,5,0,0" Grid.Row="1"
                                Text="{Binding DataContext.BusyDescription,
        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xctk:BusyIndicator}}}"
                                HorizontalAlignment="Center" TextWrapping="Wrap" />
                    <ProgressBar Margin="0,5,0,0" Grid.Row="2"
                                Value="{Binding DataContext.BusyProgressBarPercent,
        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type xctk:BusyIndicator}}}"
                                Height="15" HorizontalAlignment="Stretch" />
                    <Button Margin="0,5,0,5" Padding="5,0,5,0" Grid.Row="3" Content="{x:Static properties:Resources.StopButtonText}" HorizontalAlignment="Center"
                                Command="ApplicationCommands.Stop" />
                </Grid>
            </DataTemplate>
        </xctk:BusyIndicator.BusyContentTemplate>
        <xctk:BusyIndicator.OverlayStyle>
            <Style TargetType="Rectangle">
                <Setter Property="Fill" Value="Blue" />
                <Setter Property="Opacity" Value="0.05" />
            </Style>
        </xctk:BusyIndicator.OverlayStyle>
        <xctk:BusyIndicator.ProgressBarStyle>
            <Style TargetType="ProgressBar">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
        </xctk:BusyIndicator.ProgressBarStyle>
        <Grid Name="MainPanel">            
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <fluent:Ribbon Name="MainRibbon" Margin="0,0,0,2"
                           IsQuickAccessToolBarMenuDropDownVisible="False">                
                <!--
                <fluent:Ribbon.TitleTemplate>
                    <DataTemplate>
                        <Grid>
                            <Border Background="#70FFFFFF" Margin="0,0,80,0">
                                <Border.Effect>
                                    <BlurEffect Radius="20"/>
                                </Border.Effect>
                            </Border>
                            <TextBlock Name="TitleBox" Margin="2,2,82,0"
                                           Text="{Binding Title}" Foreground="Black"/>
                        </Grid>
                    </DataTemplate>
                </fluent:Ribbon.TitleTemplate>-->
                <fluent:Ribbon.QuickAccessItems>
                    <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=ApplicationCommandsSaveButton}" />
                    <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=ApplicationCommandsSaveAsButton}" />
                    <fluent:QuickAccessMenuItem IsChecked="False" Target="{Binding ElementName=ApplicationCommandsPrintButton}" />
                    <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=ApplicationCommandsSaveAllButton}" />
                    <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=ApplicationCommandsRunButton}" />
                    <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=ApplicationCommandsRunCurrentButton}" />
                    <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=ApplicationCommandsUndoButton}" />
                    <fluent:QuickAccessMenuItem IsChecked="True" Target="{Binding ElementName=ApplicationCommandsRedoButton}" />                                       
                </fluent:Ribbon.QuickAccessItems>
                <fluent:Ribbon.Menu>
                    <fluent:ApplicationMenu RightPaneWidth="800" Header="{x:Static p:Resources.ApplicationMenuHeader}">
                        <fluent:ApplicationMenu.RightPaneContent>
                            <StackPanel Orientation="Vertical">
                                <Label Content="{x:Static p:Resources.RecentDsProjects}" FontWeight="SemiBold"
                                               Margin="0" />
                                <!--<RibbonSeparator />-->
                                <ItemsControl x:Name="RecentFilesItemsControl" Margin="0,1,0,0">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <fluent:MenuItem Command="ApplicationCommands.Open"                                                                 
                                                                  CommandParameter="{Binding FullFileName}"
                                                                  Header="{Binding FileNameToDisplay}"
                                                                  ToolTip="{Binding FullFileName}" 
                                                             HorizontalAlignment="Left" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <fluent:MenuItem Header="{x:Static p:Resources.ClearRecentFilesListButtonLabel}" KeyTip="{x:Null}"
                                                      Click="ClearRecentFilesListButtonOnClick" HorizontalAlignment="Right" />
                            </StackPanel>
                        </fluent:ApplicationMenu.RightPaneContent>
                        <StackPanel HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Orientation="Vertical">
                            <fluent:MenuItem Command="ApplicationCommands.New"
                                                       Header="{x:Static p:Resources.NewMenu}"
                                                       Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/New.png"                                                       
                                                       ToolTip="{x:Static p:Resources.NewToolTip}" />
                            <fluent:MenuItem Command="ApplicationCommands.Open"
                                                       Header="{x:Static p:Resources.OpenMenu}"
                                                       Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Open.png"                                                       
                                                       ToolTip="{x:Static p:Resources.OpenToolTip}" />
                            <fluent:MenuItem
                                Command="{x:Static local:MainWindow.ExportToXaml}"
                                Header="{x:Static p:Resources.ExportToXamlMenu}"
                                Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/ExportToXaml.png"                                
                                ToolTip="{x:Static p:Resources.ExportToXamlToolTip}" />
                            <fluent:MenuItem
                                Command="{x:Static local:MainWindow.ImportFromXaml}"
                                Header="{x:Static p:Resources.ImportFromXamlMenu}"
                                Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/ImportFromXaml.png"                                
                                ToolTip="{x:Static p:Resources.ImportFromXamlToolTip}" />
                            <fluent:MenuItem
                                Command="{x:Static local:MainWindow.AddDsPagesAndDsShapesFromLibrary}"
                                Header="{x:Static p:Resources.AddDsPagesAndDsShapesFromLibraryMenu}"
                                Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Add.png"                                
                                ToolTip="{x:Static p:Resources.AddDsPagesAndDsShapesFromLibraryToolTip}" />
                            <fluent:MenuItem Command="ApplicationCommands.Find"
                                                       Header="{x:Static p:Resources.FindMenu}"
                                                       Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Find.png"                                                       
                                                       ToolTip="{x:Static p:Resources.FindToolTip}" />
                            <fluent:MenuItem Command="ApplicationCommands.Replace"
                                                       Header="{x:Static p:Resources.ReplaceMenu}"
                                                       Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Find.png"                                                       
                                                       ToolTip="{x:Static p:Resources.ReplaceToolTip}" />
                            <fluent:MenuItem Command="ApplicationCommands.Properties"
                                                       Header="{x:Static p:Resources.PropertiesMenu}"
                                                       Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Properties.png"                                                       
                                                       ToolTip="{x:Static p:Resources.PropertiesToolTip}" />                            
                        </StackPanel>                                                  
                    </fluent:ApplicationMenu>
                </fluent:Ribbon.Menu>
                <!--<fluent:Ribbon.HelpPaneContent>
                    <fluent:Button Command="ApplicationCommands.Help"
                                  Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Help.png"
                                  ToolTipTitle="{x:Static p:Resources.HelpToolTip}"
                                  ToolTip="{x:Static p:Resources.HelpToolTip}" />
                </fluent:Ribbon.HelpPaneContent>-->
                <fluent:RibbonTabItem Visibility="Collapsed">
                    <fluent:RibbonGroupBox>
                        <fluent:Button x:Name="ApplicationCommandsSaveButton" 
                            Command="ApplicationCommands.Save"
                                          Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Save.png"                                          
                                          ToolTip="{x:Static p:Resources.SaveToolTip}" />
                        <fluent:Button x:Name="ApplicationCommandsSaveAsButton" 
                            Command="ApplicationCommands.SaveAs"
                                          Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/SaveAs.png"                                          
                                          ToolTip="{x:Static p:Resources.SaveAsToolTip}" />
                        <fluent:Button x:Name="ApplicationCommandsPrintButton" 
                                       Command="ApplicationCommands.Print"
                                          Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Print.png"                                          
                                          ToolTip="{x:Static p:Resources.PrintToolTip}" />
                        <fluent:Button x:Name="ApplicationCommandsSaveAllButton" 
                                       Command="{x:Static local:MainWindow.SaveAll}"
                                          Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/SaveAll.png"                                          
                                          ToolTip="{x:Static p:Resources.SaveAllToolTip}" />
                        <fluent:Button x:Name="ApplicationCommandsRunButton" 
                                       Command="{x:Static local:MainWindow.Run}"
                                          Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Run.png"                                          
                                          ToolTip="{x:Static p:Resources.RunToolTip}" />
                        <fluent:Button x:Name="ApplicationCommandsRunCurrentButton" 
                                       Command="{x:Static local:MainWindow.RunCurrent}"
                                          Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/RunCurrent.png"                                          
                                          ToolTip="{x:Static p:Resources.RunCurrentToolTip}" />
                        <fluent:Button x:Name="ApplicationCommandsUndoButton" 
                                       Command="ApplicationCommands.Undo"
                                          Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/undo.png"                                          
                                          ToolTip="{x:Static p:Resources.UndoToolTip}" />
                        <fluent:Button x:Name="ApplicationCommandsRedoButton" 
                                       Command="ApplicationCommands.Redo"
                                          Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Redo.png"                                          
                                          ToolTip="{x:Static p:Resources.RedoToolTip}" />
                    </fluent:RibbonGroupBox>
                </fluent:RibbonTabItem>
                <fluent:RibbonTabItem Header="{x:Static p:Resources.MainRibbonTabHeader}">
                    <!--
                <fluent:RibbonGroupBox Header="{x:Static p:Resources.Clipboard}">
                    <fluent:Button Command="ApplicationCommands.Paste" 
                                  Header="{x:Static p:Resources.Paste}" KeyTip="V" LargeImageSource="{StaticResource PasteLargeImageSource}" 
                                  ToolTipTitle="{x:Static p:Resources.PasteToolTip}" ToolTip="{x:Static p:Resources.PasteToolTip}"/>
                    <fluent:Button Command="ApplicationCommands.Cut" 
                                  Header="{x:Static p:Resources.Cut}" KeyTip="X" Icon="{StaticResource CutImageSource}" 
                                  ToolTipTitle="{x:Static p:Resources.CutToolTip}" ToolTip="{x:Static p:Resources.CutToolTip}"/>
                    <fluent:Button Command="ApplicationCommands.Copy" 
                                  Header="{x:Static p:Resources.Copy}" KeyTip="C" Icon="{StaticResource CopyImageSource}" 
                                  ToolTipTitle="{x:Static p:Resources.CopyToolTip}" ToolTip="{x:Static p:Resources.CopyToolTip}"/>
                </fluent:RibbonGroupBox>-->
                    <fluent:RibbonGroupBox Header="{x:Static p:Resources.DsPagesAndDsShapesGroupHeader}">
                        <fluent:Button Command="{x:Static local:MainWindow.NewDsPageDrawing}"
                                      Padding="5,0,5,0" 
                                      Header="{x:Static p:Resources.NewDsPageButtonText}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/New.png"
                                      KeyTip="P"                                      
                                      ToolTip="{x:Static p:Resources.NewDsPageToolTip}" />
                        <fluent:Button Command="{x:Static local:MainWindow.NewDsShapeDrawing}"
                                      Padding="5,0,5,0"
                                      Header="{x:Static p:Resources.NewDsShapeButtonText}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/New.png"
                                      KeyTip="S"                                      
                                      ToolTip="{x:Static p:Resources.NewDsShapeToolTip}" />
                        <fluent:Button Command="{x:Static local:MainWindow.UpdateComplexDsShapesOnAllDsPages}"
                                      Padding="5,0,5,0"
                                      Header="{x:Static p:Resources.UpdateComplexDsShapesText}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/UpdateComplexDsShapes.png"                                      
                                      ToolTip="{x:Static p:Resources.UpdateComplexDsShapesToolTip}" />
                    </fluent:RibbonGroupBox>
                    <fluent:RibbonGroupBox Header="{x:Static p:Resources.DsShapeGeometryGroupHeader}">                        
                        <fluent:Button
                                    Command="{x:Static common:DesignDsProjectViewModel.RotateCounterClockwise}"
                                    Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/RotateCounterClockwise.png"                                    
                                    ToolTip="{x:Static p:Resources.RotateCounterClockwiseToolTip}" />
                        <fluent:Button
                                               Command="{x:Static common:DesignDsProjectViewModel.FlipHorizontal}"
                                              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/FlipHorizontal.png"                                              
                                              ToolTip="{x:Static p:Resources.FlipHorizontalToolTip}" />
                        <fluent:Button
                                    Command="{x:Static common:DesignDsProjectViewModel.RotateClockwise}"
                                    Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/RotateClockwise.png"                                    
                                    ToolTip="{x:Static p:Resources.RotateClockwiseToolTip}" />
                    </fluent:RibbonGroupBox>
                    <fluent:RibbonGroupBox Header="{x:Static p:Resources.DsShapeGroupHeader}">
                        <fluent:RibbonToolBar>
                            <fluent:RibbonToolBar.LayoutDefinitions>
                                <fluent:RibbonToolBarLayoutDefinition>                                    
                                    <fluent:RibbonToolBarRow>
                                        <fluent:RibbonToolBarControlDefinition Target="DiscreteModeButton" />
                                        <fluent:RibbonToolBarControlDefinition Target="DiscreteModeComboBox" />                                        
                                    </fluent:RibbonToolBarRow>
                                </fluent:RibbonToolBarLayoutDefinition>
                            </fluent:RibbonToolBar.LayoutDefinitions>                            
                            <fluent:ToggleButton x:Name="DiscreteModeButton" SizeDefinition="Small"
                                                    Command="{x:Static local:MainWindow.DiscreteMode}"
                                                    Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/DiscreteMode.png"
                                                    ToolTip="{x:Static p:Resources.DiscreteModeToolTip}" />
                            <fluent:ComboBox x:Name="DiscreteModeComboBox"
                                          MinWidth="24"
                                          ToolTip="{x:Static p:Resources.DiscreteModeComboBoxToolTip}"
                                          IsEditable="True" IsTextSearchEnabled="False"
                                          Text="{Binding DiscreteModeComboBoxText, UpdateSourceTrigger=Explicit}"
                                          LostKeyboardFocus="DiscreteModeComboBoxOnLostKeyboardFocus"
                                          SelectionChanged="DiscreteModeComboBoxOnSelectionChanged"
                                          KeyUp="DiscreteModeComboBoxOnKeyUp">
                                <ComboBoxItem Content="1" />
                                <ComboBoxItem Content="2" />
                                <ComboBoxItem Content="3" />
                                <ComboBoxItem Content="4" />
                                <ComboBoxItem Content="5" />
                            </fluent:ComboBox>
                        </fluent:RibbonToolBar>                        
                    </fluent:RibbonGroupBox>
                    <fluent:RibbonGroupBox Header="{x:Static p:Resources.AlignmentGroupHeader}">
                        <fluent:RibbonToolBar>
                            <fluent:RibbonToolBar.LayoutDefinitions>
                                <fluent:RibbonToolBarLayoutDefinition>
                                    <fluent:RibbonToolBarRow>
                                        <fluent:RibbonToolBarControlGroupDefinition>
                                            <fluent:RibbonToolBarControlDefinition Target="AlignLeftButton" />
                                            <fluent:RibbonToolBarControlDefinition Target="AlignHorizontalCentersButton" />
                                            <fluent:RibbonToolBarControlDefinition Target="AlignRightButton" />
                                        </fluent:RibbonToolBarControlGroupDefinition>
                                        <fluent:RibbonToolBarControlGroupDefinition>
                                            <fluent:RibbonToolBarControlDefinition Target="DistributeHorizontalButton" />
                                        </fluent:RibbonToolBarControlGroupDefinition>
                                        <fluent:RibbonToolBarControlGroupDefinition>
                                            <fluent:RibbonToolBarControlDefinition Target="EqualizeWidthutton" />
                                        </fluent:RibbonToolBarControlGroupDefinition>
                                    </fluent:RibbonToolBarRow>
                                    <fluent:RibbonToolBarRow>
                                        <fluent:RibbonToolBarControlGroupDefinition>
                                            <fluent:RibbonToolBarControlDefinition Target="AlignTopButton" />
                                            <fluent:RibbonToolBarControlDefinition Target="AlignVerticalCentersButton" />
                                            <fluent:RibbonToolBarControlDefinition Target="AlignBottomButton" />                                            
                                        </fluent:RibbonToolBarControlGroupDefinition>
                                        <fluent:RibbonToolBarControlGroupDefinition>
                                            <fluent:RibbonToolBarControlDefinition Target="DistributeVerticalButton" />
                                        </fluent:RibbonToolBarControlGroupDefinition>
                                        <fluent:RibbonToolBarControlGroupDefinition>
                                            <fluent:RibbonToolBarControlDefinition Target="EqualizeHeightButton" />
                                        </fluent:RibbonToolBarControlGroupDefinition>
                                    </fluent:RibbonToolBarRow>
                                </fluent:RibbonToolBarLayoutDefinition>
                            </fluent:RibbonToolBar.LayoutDefinitions>
                            <fluent:Button x:Name="AlignLeftButton" SizeDefinition="Small" Command="{x:Static common:DesignDsProjectViewModel.AlignLeft}"
                                              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/AlignObjectsLeft.png"                                             
                                              ToolTip="{x:Static p:Resources.AlignLeftToolTip}" />
                            <fluent:Button x:Name="AlignHorizontalCentersButton" SizeDefinition="Small"
                                    Command="{x:Static common:DesignDsProjectViewModel.AlignHorizontalCenters}"
                                    Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/AlignObjectsCenteredHorizontal.png"                                    
                                    ToolTip="{x:Static p:Resources.AlignHorizontalCentersToolTip}" />
                            <fluent:Button x:Name="AlignRightButton" SizeDefinition="Small" Command="{x:Static common:DesignDsProjectViewModel.AlignRight}"
                                              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/AlignObjectsRight.png"                                              
                                              ToolTip="{x:Static p:Resources.AlignRightToolTip}" />
                            <fluent:Button x:Name="AlignTopButton" SizeDefinition="Small" Command="{x:Static common:DesignDsProjectViewModel.AlignTop}"
                                              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/AlignObjectsTop.png"                                              
                                              ToolTip="{x:Static p:Resources.AlignTopToolTip}" />
                            <fluent:Button x:Name="AlignVerticalCentersButton" SizeDefinition="Small"
                                    Command="{x:Static common:DesignDsProjectViewModel.AlignVerticalCenters}"
                                    Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/AlignObjectsCenteredVertical.png"                                    
                                    ToolTip="{x:Static p:Resources.AlignVerticalCentersToolTip}" />
                            <fluent:Button x:Name="AlignBottomButton" SizeDefinition="Small" Command="{x:Static common:DesignDsProjectViewModel.AlignBottom}"
                                              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/AlignObjectsBottom.png"                                              
                                              ToolTip="{x:Static p:Resources.AlignBottomToolTip}" />
                            <fluent:Button x:Name="DistributeHorizontalButton" SizeDefinition="Small"
                                    Command="{x:Static common:DesignDsProjectViewModel.DistributeHorizontal}"
                                    Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/DistributeObjectsHorizontal.png"                                    
                                    ToolTip="{x:Static p:Resources.DistributeHorizontalToolTip}" />
                            <fluent:Button x:Name="DistributeVerticalButton" SizeDefinition="Small"
                                    Command="{x:Static common:DesignDsProjectViewModel.DistributeVertical}"
                                    Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/DistributeObjectsVertical.png"                                    
                                    ToolTip="{x:Static p:Resources.DistributeVerticalToolTip}" />
                            <fluent:Button x:Name="EqualizeWidthutton" SizeDefinition="Small" Command="{x:Static common:DesignDsProjectViewModel.EqualizeWidth}"
                                              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/EqualizeWidth.png"                                              
                                              ToolTip="{x:Static p:Resources.EqualizeWidthToolTip}" />
                            <fluent:Button x:Name="EqualizeHeightButton" SizeDefinition="Small" Command="{x:Static common:DesignDsProjectViewModel.EqualizeHeight}"
                                              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/EqualizeHeight.png"                                              
                                              ToolTip="{x:Static p:Resources.EqualizeHeightToolTip}" />
                        </fluent:RibbonToolBar>                                              
                    </fluent:RibbonGroupBox>
                    <fluent:RibbonGroupBox Header="{x:Static p:Resources.ViewGroupHeader}">
                        <fluent:RibbonToolBar>
                            <fluent:RibbonToolBar.LayoutDefinitions>
                                <fluent:RibbonToolBarLayoutDefinition>
                                    <fluent:RibbonToolBarRow>                                        
                                        <fluent:RibbonToolBarControlDefinition Target="ScaleComboBox" />
                                    </fluent:RibbonToolBarRow>
                                    <fluent:RibbonToolBarRow>
                                        <fluent:RibbonToolBarControlDefinition Target="CenterButton" />
                                        <fluent:RibbonToolBarControlDefinition Target="_100PercentButton" />
                                        <fluent:RibbonToolBarControlDefinition Target="FullDrawingButton" />
                                    </fluent:RibbonToolBarRow>
                                </fluent:RibbonToolBarLayoutDefinition>
                            </fluent:RibbonToolBar.LayoutDefinitions>
                            <fluent:ComboBox x:Name="ScaleComboBox" SizeDefinition="Large"
                                      Header="{x:Static p:Resources.Scale}"                                      
                                      IsEditable="True" IsTextSearchEnabled="False"
                                      Text="{Binding ScaleComboBoxText, UpdateSourceTrigger=Explicit}"
                                      LostKeyboardFocus="ScaleComboBoxOnLostKeyboardFocus"
                                      SelectionChanged="ScaleComboBoxOnSelectionChanged" KeyUp="ScaleComboBoxOnKeyUp">
                                <ComboBoxItem Content="400%" />
                                <ComboBoxItem Content="200%" />
                                <ComboBoxItem Content="150%" />
                                <ComboBoxItem Content="100%" />
                                <ComboBoxItem Content="50%" />
                                <ComboBoxItem Content="25%" />
                            </fluent:ComboBox>
                            <fluent:Button x:Name="CenterButton" SizeDefinition="Small" Click="ButtonCenterOnClick"
                                              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Center.png"                                              
                                              ToolTip="{x:Static p:Resources.CenterToolTip}" />
                            <fluent:Button x:Name="_100PercentButton" SizeDefinition="Middle" Click="Button100PercentOnClick"
                                              Header="100%"                                              
                                              ToolTip="{x:Static p:Resources.Button100PercentToolTip}" />
                            <fluent:Button x:Name="FullDrawingButton" SizeDefinition="Small" Click="ButtonFullDrawingOnClick"
                                              Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/FullDrawing.png"                                              
                                              ToolTip="{x:Static p:Resources.ButtonFullDrawingToolTip}" />                            
                        </fluent:RibbonToolBar>
                    </fluent:RibbonGroupBox>
                    <fluent:RibbonGroupBox Header="{x:Static p:Resources.DebugDsPageGroupHeader}">
                        <Grid Margin="0,5,0,5">
                            <Grid.RowDefinitions>                                
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="200" />
                            </Grid.ColumnDefinitions>
                            <fluent:ToggleButton x:Name="ShowHideDsShapesInfoTooltipsButton"
                                                Grid.RowSpan="2"
                                                    Header="{x:Static p:Resources.ShowHideDsShapesInfoButtonLabel}"
                                                    Command="{x:Static local:MainWindow.ShowHideDsShapesInfoTooltips}"
                                                    Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/DebugInfo.png"                                                    
                                                    ToolTip="{x:Static p:Resources.ShowHideDsShapesInfoButtonToolTip}" />
                            <TextBlock Grid.Column="1" Text="{x:Static p:Resources.ShowHideDsShapesInfoFontSize}" VerticalAlignment="Center"/>
                            <Slider Grid.Column="2" Margin="5,0,0,0" Style="{StaticResource RibbonSliderStyle}"
                                    ToolTip="{x:Static p:Resources.ShowHideDsShapesInfoFontSizeToolTip}"
                                    Value="{Binding DsShapesInfoFontSizeScale}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{x:Static p:Resources.ShowHideDsShapesInfoOpacity}" VerticalAlignment="Center" />
                            <Slider Grid.Row="1" Grid.Column="2" Margin="5,0,0,0" Style="{StaticResource RibbonSliderStyle}"
                                    ToolTip="{x:Static p:Resources.ShowHideDsShapesInfoOpacityToolTip}"
                                    Value="{Binding DsShapesInfoOpacity}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                        </Grid>
                    </fluent:RibbonGroupBox>
                </fluent:RibbonTabItem>
                <fluent:RibbonTabItem x:Name="ToolkitRibbonTabItem" Header="{x:Static p:Resources.ToolkitRibbonTabHeader}">
                    <fluent:RibbonGroupBox x:Name="DsPagesToolkitRibbonGroupBox" Header="{x:Static p:Resources.DsPagesToolkitGroupHeader}">
                        <fluent:Button Command="{x:Static local:MainWindow.CreateDsPages}"
                                      Padding="5,0,5,0"
                                      Header="{x:Static p:Resources.CreateDsPagesButtonLabel}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Add.png"                                      
                                      ToolTip="{x:Static p:Resources.CreateDsPagesToolTip}" />
                        <fluent:Button Command="{x:Static local:MainWindow.UpdateDsPages}"
                                      Padding="5,0,5,0"
                                      Header="{x:Static p:Resources.UpdateDsPagesButtonLabel}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Update.png"                                      
                                      ToolTip="{x:Static p:Resources.UpdateDsPagesToolTip}" />
                        <fluent:Button Command="{x:Static local:MainWindow.UpdateComplexDsShapesExtended}"
                                      Padding="5,0,5,0"
                                      Header="{x:Static p:Resources.UpdateComplexDsShapesExtendedText}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/UpdateComplexDsShapes.png"                                      
                                      ToolTip="{x:Static p:Resources.UpdateComplexDsShapesExtendedToolTip}" />
                    </fluent:RibbonGroupBox>
                </fluent:RibbonTabItem>
                <fluent:RibbonTabItem x:Name="DebugRibbonTabItem" Header="{x:Static p:Resources.DebugRibbonTabHeader}">
                    <fluent:RibbonGroupBox Header="{x:Static p:Resources.DebugDsPagesGroupHeader}">
                        <fluent:Button Command="{x:Static local:MainWindow.DebugFindDuplicates}"
                                      Padding="5,0,5,0"
                                      Header="{x:Static p:Resources.DebugFindDuplicatesButtonLabel}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Tag.png"                                      
                                      ToolTip="{x:Static p:Resources.DebugFindDuplicatesToolTip}" />
                        <fluent:Button Command="{x:Static local:MainWindow.DebugFindIncorrectDsPagesRefs}"
                                      Padding="5,0,5,0"
                                      Header="{x:Static p:Resources.DebugFindIncorrectDsPagesRefsButtonLabel}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Link.png"                                      
                                      ToolTip="{x:Static p:Resources.DebugFindIncorrectDsPagesRefsToolTip}" />
                        <fluent:Button Command="{x:Static local:MainWindow.DebugFindIncorrectOpcTags}"
                                      Padding="5,0,5,0"
                                      Header="{x:Static p:Resources.DebugFindIncorrectOpcTagsButtonLabel}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Tag.png"                                      
                                      ToolTip="{x:Static p:Resources.DebugFindIncorrectOpcTagsToolTip}" />
                        <fluent:Button Command="{x:Static local:MainWindow.DebugFindIncorrectExpressions}"
                                      Padding="5,0,5,0"
                                      Header="{x:Static p:Resources.DebugFindIncorrectExpressionsButtonLabel}"
                                      Icon="pack://application:,,,/Ssz.Operator.Design.Core;component/Resources/Images/Link.png"                                      
                                      ToolTip="{x:Static p:Resources.DebugFindIncorrectExpressionsToolTip}" />
                    </fluent:RibbonGroupBox>
                </fluent:RibbonTabItem>
            </fluent:Ribbon>

            <avalondock:DockingManager x:Name="MainDockingManager" Grid.Row="1"
                         DataContext="{x:Static controls:DockingManagerViewModel.Instance}"
                         ActiveContent="{Binding ActiveContent, Mode=TwoWay}"
                         DocumentsSource="{Binding DocumentsSource}"
                         AnchorablesSource="{Binding AnchorablesSource}" >
                <avalondock:DockingManager.Theme>
                    <avalondock:GenericTheme/>
                </avalondock:DockingManager.Theme>

                <avalondock:DockingManager.Resources>

                    <!-- add views for specific ViewModels -->
                    <DataTemplate DataType="{x:Type controlsDesign:DesignDrawingViewModel}">
                        <controls:DesignDrawingDockControl />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type controls:DsPagesListDockViewModel}">
                        <controls:DsPagesListDockControl />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type controls:DsShapesListDockViewModel}">
                        <controls:DsShapesListDockControl />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type controls:DrawingDsShapesDockViewModel}">
                        <controls:DrawingDsShapesDockControl />
                    </DataTemplate>

                </avalondock:DockingManager.Resources>

                <avalondock:DockingManager.LayoutItemContainerStyle>
                    <!-- you can add additional bindings from the layoutitem to the DockWindowViewModel -->
                    <Style TargetType="{x:Type avalondock:LayoutItem}">
                        <Setter Property="Title" Value="{Binding Model.Title}" />                                            
                        <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                        <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                        <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}" />
                    </Style>
                </avalondock:DockingManager.LayoutItemContainerStyle>

                <!--
                <avalondock:DockingManager.LayoutUpdateStrategy>
                    <controls:LayoutUpdateStrategy/>
                </avalondock:DockingManager.LayoutUpdateStrategy>-->

                <avalondock:LayoutRoot>
                    <avalondock:LayoutPanel Orientation="Horizontal">
                        <avalondock:LayoutDocumentPane />
                        <avalondock:LayoutAnchorablePane Name="ToolsPane" DockWidth="400" />
                    </avalondock:LayoutPanel>
                </avalondock:LayoutRoot>

            </avalondock:DockingManager>

            <fluent:StatusBar Grid.Row="2"
                          HorizontalAlignment="Stretch">               

                <Separator HorizontalAlignment="Left" />                

                <fluent:StatusBarItem Title="Used memory"
                                  HorizontalAlignment="Right"
                                  Value="{Binding UsedMemory, StringFormat={}{0:##\,000} KB}" />

                <Separator HorizontalAlignment="Right" />

                <fluent:StatusBarItem Title="Zoom"
                                  HorizontalAlignment="Right"
                                  Value="{Binding Value, ElementName=zoomSlider, StringFormat={}{0:P}}" />                

                <fluent:StatusBarItem Title="Zoom Slider"
                                  HorizontalAlignment="Right">
                    <Slider x:Name="zoomSlider"
                        IsDirectionReversed="False"
                        IsSnapToTickEnabled="True"
                        LargeChange="0.1"
                        Maximum="2.0"
                        Minimum="0.5"
                        SmallChange="0.1"
                        Style="{DynamicResource ZoomSliderStyle}"
                        TickFrequency="0.1"
                        ValueChanged="ZoomSlider_OnValueChanged"
                        Value="{Binding Zoom}" />
                </fluent:StatusBarItem>
            </fluent:StatusBar>
            <!--
            <StatusBar Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0">
               
            <StatusBarItem Header="{x:Static p:Resources.Ready}" Margin="3,0,0,0"/>
            <StatusBarItem HorizontalAlignment="Right">
                <StatusBarItem.Style>
                    <Style TargetType="StatusBarItem" BasedOn="{StaticResource {x:Type StatusBarItem}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShellService.ActiveZoomCommands.DefaultZooms}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StatusBarItem.Style>

                <StackPanel Orientation="Horizontal">
                    <Label Header="{x:Static p:Resources.ZoomMenu}" Target="{Binding ElementName=zoomBox}" VerticalAlignment="Center" Padding="0" Margin="0"/>
                    <ComboBox x:Name="zoomBox" ItemsSource="{Binding ShellService.ActiveZoomCommands.DefaultZooms}"
                              Text="{Binding ShellService.ActiveZoomCommands.Zoom, UpdateSourceTrigger=LostFocus, Converter={StaticResource PercentConverter}}" 
                              IsEditable="True" DropDownClosed="ZoomBoxDropDownClosedHandler" KeyDown="ZoomBoxKeyDownHandler" Margin="7,0,0,0" Width="65"
                              Style="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}">
                    </ComboBox>
                </StackPanel>
            </StatusBarItem>
            </StatusBar>-->
        </Grid>
    </xctk:BusyIndicator>
</fluent:RibbonWindow>