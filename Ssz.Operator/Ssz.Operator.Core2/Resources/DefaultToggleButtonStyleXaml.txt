<!--<ControlTheme TargetType="ToggleButton" xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
	<ControlTheme.BasedOn>
		<!--<ControlTheme TargetType="ButtonBase">
			<ControlTheme.Resources>
				<ResourceDictionary/>
			</Style.Resources>
			<Setter Property="FrameworkElement.FocusVisualStyle">
				<Setter.Value>
					<!--<ControlTheme TargetType="IFrameworkInputElement">
						<ControlTheme.Resources>
							<ResourceDictionary/>
						</Style.Resources>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</ControlTheme>-->
				</Setter.Value>
			</Setter>		
			<Setter Property="Border.BorderBrush">
				<Setter.Value>
					<SolidColorBrush>#FF707070</SolidColorBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Border.BorderThickness">
				<Setter.Value>
					<Thickness>1,1,1,1</Thickness>
				</Setter.Value>
			</Setter>
			<Setter Property="TextElement.Foreground">
				<Setter.Value>
					<DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}"/>
				</Setter.Value>
			</Setter>
			<Setter Property="Control.HorizontalContentAlignment">
				<Setter.Value>
					<x:Static Member="HorizontalAlignment.Center"/>
				</Setter.Value>
			</Setter>
			<Setter Property="Control.VerticalContentAlignment">
				<Setter.Value>
					<x:Static Member="VerticalAlignment.Center"/>
				</Setter.Value>
			</Setter>
			<Setter Property="Control.Padding">
				<Setter.Value>
					<Thickness>1,1,1,1</Thickness>
				</Setter.Value>
			</Setter>
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate TargetType="ButtonBase">
						<mwt:ButtonChrome BorderBrush="{TemplateBinding Border.BorderBrush}" RenderDefaulted="{TemplateBinding Button.IsDefaulted}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" Name="Chrome" SnapsToDevicePixels="True">
							<mwt:ButtonChrome.Background>							
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<LinearGradientBrush.GradientStops>
										<GradientStop Color="#FFF3F3F3" Offset="0"/>
										<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
										<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
										<GradientStop Color="#FFCDCDCD" Offset="1"/>
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>							
							</mwt:ButtonChrome.Background>
							<Grid>
								<Border Background="{TemplateBinding Panel.Background}" Opacity="0.5" CornerRadius="1"/>
								<ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
							</Grid>
						</mwt:ButtonChrome>
						<ControlTemplate.Styles>
							<Style Selector="UIElement.IsKeyboardFocused">
								<Setter Property="mwt:ButtonChrome.RenderDefaulted" TargetName="Chrome">
									<Setter.Value>
										<s:Boolean>True</s:Boolean>
									</Setter.Value>
								</Setter>
								<Trigger.Value>
									<s:Boolean>True</s:Boolean>
								</Trigger.Value>
							</Style>
							<Style Selector="ToggleButton.IsChecked">
								<Setter Property="mwt:ButtonChrome.RenderPressed" TargetName="Chrome">
									<Setter.Value>
										<s:Boolean>True</s:Boolean>
									</Setter.Value>
								</Setter>
								<Trigger.Value>
									<s:Boolean>True</s:Boolean>
								</Trigger.Value>
							</Style>
							<Style Selector="UIElement.IsEnabled">
								<Setter Property="TextElement.Foreground">
									<Setter.Value>
										<SolidColorBrush>#FFADADAD</SolidColorBrush>
									</Setter.Value>
								</Setter>
								<Trigger.Value>
									<s:Boolean>False</s:Boolean>
								</Trigger.Value>
							</Style>
						</ControlTemplate.Styles>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</ControlTheme>-->
	</Style.BasedOn>
	<ControlTheme.Resources>
		<ResourceDictionary/>
	</Style.Resources>
</ControlTheme>-->