//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ssz.Utils.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ssz.Utils.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Addon is not initialized.
        /// </summary>
        public static string Addon_STATE_INITIALIZING {
            get {
                return ResourceManager.GetString("Addon_STATE_INITIALIZING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in addon work!.
        /// </summary>
        public static string Addon_STATE_NOT_OPERATIONAL {
            get {
                return ResourceManager.GetString("Addon_STATE_NOT_OPERATIONAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is not connected to server.
        /// </summary>
        public static string Addon_STATE_NOT_OPERATIONAL_DataAccessProviderIsNotConnected {
            get {
                return ResourceManager.GetString("Addon_STATE_NOT_OPERATIONAL_DataAccessProviderIsNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server connection is not initialized.
        /// </summary>
        public static string Addon_STATE_NOT_OPERATIONAL_DataAccessProviderIsNull {
            get {
                return ResourceManager.GetString("Addon_STATE_NOT_OPERATIONAL_DataAccessProviderIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string Addon_STATE_OPERATIONAL {
            get {
                return ResourceManager.GetString("Addon_STATE_OPERATIONAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to server.
        /// </summary>
        public static string Addon_STATE_OPERATIONAL_DataAccessProviderIsConnected {
            get {
                return ResourceManager.GetString("Addon_STATE_OPERATIONAL_DataAccessProviderIsConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find or create addon config directory: {0}.
        /// </summary>
        public static string AddonConfigDirectoryError {
            get {
                return ResourceManager.GetString("AddonConfigDirectoryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Addon ConfigDirectory Error: Cannot contain subdirectory(-es): {0}.
        /// </summary>
        public static string AddonConfigDirectoryError_CannotContainPath {
            get {
                return ResourceManager.GetString("AddonConfigDirectoryError_CannotContainPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddonNameIsEmpty.
        /// </summary>
        public static string AddonNameIsEmpty {
            get {
                return ResourceManager.GetString("AddonNameIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available Addon is not found: {0}.
        /// </summary>
        public static string AvailableAddonIsNotFound {
            get {
                return ResourceManager.GetString("AvailableAddonIsNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculation error.
        /// </summary>
        public static string CalculationLambdaExpressionError {
            get {
                return ResourceManager.GetString("CalculationLambdaExpressionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File writing error.
        /// </summary>
        public static string CsvDb_CsvFileWritingError {
            get {
                return ResourceManager.GetString("CsvDb_CsvFileWritingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File does not exist.
        /// </summary>
        public static string CsvHelper_CsvFileDoesNotExist {
            get {
                return ResourceManager.GetString("CsvHelper_CsvFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File contains duplicate key.
        /// </summary>
        public static string CsvHelper_CsvFileDuplicateKey {
            get {
                return ResourceManager.GetString("CsvHelper_CsvFileDuplicateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File reading error.
        /// </summary>
        public static string CsvHelper_CsvFileReadingError {
            get {
                return ResourceManager.GetString("CsvHelper_CsvFileReadingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desired addon {0} failed..
        /// </summary>
        public static string DesiredAddonFailed {
            get {
                return ResourceManager.GetString("DesiredAddonFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate addons.
        /// </summary>
        public static string DuplicateAddonsMessage {
            get {
                return ResourceManager.GetString("DuplicateAddonsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file &apos;{0}&apos; was not found and is not optional..
        /// </summary>
        public static string Error_FileNotFound {
            get {
                return ResourceManager.GetString("Error_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File path must be a non-empty string..
        /// </summary>
        public static string Error_InvalidFilePath {
            get {
                return ResourceManager.GetString("Error_InvalidFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A duplicate key &apos;{0}&apos; was found..
        /// </summary>
        public static string Error_KeyIsDuplicated {
            get {
                return ResourceManager.GetString("Error_KeyIsDuplicated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not parse the YAML file: {0}..
        /// </summary>
        public static string Error_YamlParseError {
            get {
                return ResourceManager.GetString("Error_YamlParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File does not exist or  is not readable.
        /// </summary>
        public static string FileDoesNotExist {
            get {
                return ResourceManager.GetString("FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File is not readable.
        /// </summary>
        public static string FileIsNotReadable {
            get {
                return ResourceManager.GetString("FileIsNotReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File is not writable.
        /// </summary>
        public static string FileIsNotWritable {
            get {
                return ResourceManager.GetString("FileIsNotWritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Name.
        /// </summary>
        public static string FileNameScopeName {
            get {
                return ResourceManager.GetString("FileNameScopeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression error.
        /// </summary>
        public static string PrepareLambdaExpressionError {
            get {
                return ResourceManager.GetString("PrepareLambdaExpressionError", resourceCulture);
            }
        }
    }
}
