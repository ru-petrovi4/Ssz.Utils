<Style TargetType="{x:Type TabControl}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
	<Style.Resources>
		<Style x:Key="TabItemFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="4,4,4,2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type TabItem}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
			<Setter Property="Padding" Value="12,2,12,2"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<themes:ClassicBorderDecorator x:Name="ClassicBorder" BorderBrush="{x:Static themes:ClassicBorderDecorator.ClassicBorderBrush}" BorderThickness="2" BorderStyle="TabTop" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
							<ContentPresenter ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
						</themes:ClassicBorderDecorator>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="Panel.ZIndex" Value="1"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="BorderStyle" TargetName="ClassicBorder" Value="TabBottom"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="BorderStyle" TargetName="ClassicBorder" Value="TabLeft"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="BorderStyle" TargetName="ClassicBorder" Value="TabRight"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Padding" Value="11,2,14,2"/>
								<Setter Property="Margin" Value="-2"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Padding" Value="14,2,11,2"/>
								<Setter Property="Margin" Value="-2"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Style.Resources>
	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
	<Setter Property="BorderBrush" Value="{x:Static themes:ClassicBorderDecorator.ClassicBorderBrush}"/>
	<Setter Property="BorderThickness" Value="3"/>
	<Setter Property="Margin" Value="0"/>
	<Setter Property="Padding" Value="1"/>
	<Setter Property="MinWidth" Value="10"/>
	<Setter Property="MinHeight" Value="10"/>
	<Setter Property="HorizontalContentAlignment" Value="Center"/>
	<Setter Property="VerticalContentAlignment" Value="Center"/>
	<Setter Property="Template">
		<Setter.Value>
			<ControlTemplate TargetType="{x:Type TabControl}">
				<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
					<Grid.ColumnDefinitions>
						<ColumnDefinition x:Name="ColumnDefinition0"/>
						<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
						<RowDefinition x:Name="RowDefinition1" Height="*"/>
					</Grid.RowDefinitions>
					<TabPanel x:Name="HeaderPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
					<Grid x:Name="ContentPanel" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
						<themes:ClassicBorderDecorator BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="Raised" Background="{TemplateBinding Background}">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="2,2,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</themes:ClassicBorderDecorator>
					</Grid>
				</Grid>
				<ControlTemplate.Triggers>
					<Trigger Property="TabStripPlacement" Value="Bottom">
						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
						<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
						<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
					</Trigger>
					<Trigger Property="TabStripPlacement" Value="Left">
						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
						<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
						<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
						<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
						<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
						<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
						<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
					</Trigger>
					<Trigger Property="TabStripPlacement" Value="Right">
						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
						<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
						<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
						<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
						<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
						<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
						<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
					</Trigger>
					<Trigger Property="IsEnabled" Value="false">
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</Setter.Value>
	</Setter>
</Style>