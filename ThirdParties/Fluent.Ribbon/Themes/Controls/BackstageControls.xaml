<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:converters="clr-namespace:Fluent.Converters">
    <Style x:Key="Fluent.Ribbon.Styles.Backstage.Button"
           TargetType="{x:Type Fluent:Button}">
        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush6}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="81" />
        <Setter Property="Padding" Value="0 9 0 0" />
        <Setter Property="Size" Value="Large" />
        <Setter Property="Width" Value="85" />
    </Style>

    <Style x:Key="Fluent.Ribbon.Styles.Backstage.ToggleButton"
           TargetType="{x:Type Fluent:ToggleButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush6}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="81" />
        <Setter Property="Padding" Value="0 9 0 0" />
        <Setter Property="Size" Value="Large" />
        <Setter Property="Width" Value="85" />
    </Style>

    <Style x:Key="Fluent.Ribbon.Styles.Backstage.DropDownButton"
           TargetType="{x:Type Fluent:DropDownButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush6}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="81" />
        <Setter Property="Padding" Value="0 9 0 0" />
        <Setter Property="Size" Value="Large" />
        <Setter Property="Width" Value="85" />
    </Style>

    <Style x:Key="Fluent.Ribbon.Styles.Backstage.ComboBox"
           TargetType="{x:Type Fluent:ComboBox}">
        <Setter Property="Height" Value="42" />
        <Setter Property="IsEditable" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Width" Value="229" />
    </Style>

    <!-- Inner Backstage TabControl Style -->
    <Style x:Key="InnerBackstageSeparatorTabItemStyle"
           TargetType="{x:Type Fluent:SeparatorTabItem}">
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.AccentBaseColorBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:SeparatorTabItem}">
                    <Grid Margin="0 0 10 0">
                        <TextBlock Margin="0 5"
                                   VerticalAlignment="Center"
                                   FontFamily="Segoe UI Light, Lucida Sans Unicode, Verdana"
                                   FontSize="17"
                                   Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                                   TextWrapping="Wrap" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InnerBackstageTabControlItem"
           TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Margin="0 3"
                          Background="Transparent">
                        <Border x:Name="border"
                                Margin="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1">
                            <ContentPresenter Margin="5 5 50 5"
                                              ContentSource="Header" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InnerBackstageTabControlStyle"
           TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <ControlTemplate.Resources>
                        <Style BasedOn="{StaticResource InnerBackstageSeparatorTabItemStyle}"
                               TargetType="{x:Type Fluent:SeparatorTabItem}" />
                        <Style BasedOn="{StaticResource InnerBackstageTabControlItem}"
                               TargetType="{x:Type TabItem}" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Margin="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderBrush="{DynamicResource GrayBrush7}"
                                BorderThickness="0 0 1 0" />
                        <StackPanel Grid.Column="0"
                                    Margin="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    IsItemsHost="True" />
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          Grid.Column="1"
                                          Margin="0"
                                          VerticalAlignment="Stretch"
                                          ContentSource="SelectedContent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>