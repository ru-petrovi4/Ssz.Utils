<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) Teroneko.
Licensed under the MIT license. See LICENSE file in the project root for full license information.
-->
<Project InitialTargets="ApplyProjectBuildInPackageTargetsForTfmSpecificBuildOutput" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <Target Name="ApplyProjectBuildInPackageTargetsForTfmSpecificBuildOutput">

    <ItemGroup>
      <_ProjectBuildInPackageTargetsForTfmSpecificBuildOutput Include="$(ProjectBuildInPackageTargetsForTfmSpecificBuildOutput.Split(';'))" />
    </ItemGroup>

     <PropertyGroup>
      <TargetsForTfmSpecificBuildOutput Condition="'%(_ProjectBuildInPackageTargetsForTfmSpecificBuildOutput.Identity)' != '' And !$(TargetsForTfmSpecificBuildOutput.Contains('%(_ProjectBuildInPackageTargetsForTfmSpecificBuildOutput.Identity)'))">$(TargetsForTfmSpecificBuildOutput);%(_ProjectBuildInPackageTargetsForTfmSpecificBuildOutput.Identity)</TargetsForTfmSpecificBuildOutput>
    </PropertyGroup>

  </Target>

  <Target Name="CopyProjectBuildInPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">

    <PropertyGroup>
      <IsVerbosityDetailed>false</IsVerbosityDetailed>
      <IsVerbosityDetailed Condition="'$(ProjectBuildInPackageVerbosity)' == 'detailed' Or '$(ProjectBuildInPackageVerbosity)' == 'd'">true</IsVerbosityDetailed>

      <IsVerbosityNormal>false</IsVerbosityNormal>
      <IsVerbosityNormal Condition="'$(IsVerbosityDetailed)' == 'true' Or '$(ProjectBuildInPackageVerbosity)' == 'normal' Or '$(ProjectBuildInPackageVerbosity)' == 'n'">true</IsVerbosityNormal>
    </PropertyGroup>

    <Message Condition="'$(NoProjectBuildInPackageWelcome)' != 'true'" Text="[$(MSBuildThisFileName)] Thanks for using my package. &lt;3" Importance="high" />

    <ItemGroup>
      <!-- Filter out unnecessary files -->
      <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')->WithMetadataValue('PrivateAssets', 'all'))" />
    </ItemGroup>

    <!-- Print batches for debug purposes -->
    <Message Condition="'$(IsVerbosityDetailed)' == 'true' And '@(_ReferenceCopyLocalPaths)' != ''"
             Text="[$(MSBuildThisFileName)] Copy $([MSBuild]::MakeRelative('$(MSBuildProjectDirectory)','%(_ReferenceCopyLocalPaths.FullPath)')) (local) to .\%(_ReferenceCopyLocalPaths.DestinationSubDirectory) (package)" Importance="high" />
    
    <Message Condition="'$(IsVerbosityNormal)' == 'true' And '@(_ReferenceCopyLocalPaths)' != ''"
             Text="[$(MSBuildThisFileName)] @(_ReferenceCopyLocalPaths->Count()) local files have been copied to package. (TargetFramework=$(TargetFramework))" Importance="high" />

    <Message Condition="'$(IsVerbosityDetailed)' == 'true' And '@(_ReferenceCopyLocalPaths)' == ''"
             Text="[$(MSBuildThisFileName)] There are no copy operations. You need to specify PrivateAssets=&quot;all&quot; to to those projects which build output you want to to have copied to the package." Importance="high" />

    <ItemGroup>
      <!-- 
        Instruct to add files to package with consideration of their individual sub folder. 
        
        If sub folder is empty, the root folder of specific target framework in package is chosen.
      -->
      <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
    </ItemGroup>

  </Target>

</Project>