; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define dt GetDateTimeString('yyyy/mm/dd', '.', '');
#define Company "Ssz"

[Setup]
AllowNoIcons=yes
AppPublisher={#Company}
; AppPublisherURL=http://www.simcode.com/
AppName={#Company} DCS Central Server Client
AppVerName={#Company} DCS Central Server Client {#dt}
CreateUninstallRegKey=yes
DefaultDirName={pf}\{#Company}\
DefaultGroupName={#Company} DCS
ShowLanguageDialog=no
ArchitecturesInstallIn64BitMode=x64
OutputDir=SetupOutput
OutputBaseFilename={#Company} DCS Central Server Client Setup {#dt}


Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Dirs]
; CentralServer_Client
; Name: "{commonappdata}\{#Company}\Dcs.CentralServer_Client\FilesStore\"

[Files]
; CentralServer_Client
Source: ".\InputFilesStd\Ssz.Dcs.CentralServer_ClientWindowsService\*"; DestDir: "{app}\Dcs.CentralServer_Client"; Excludes: "*.pdb"; Flags: recursesubdirs replacesameversion
; Common
Source: ".\InputFilesStd\Prerequisites\Ssz.EditJson.exe"; DestDir: "{app}\Common"; Excludes: "*.pdb"; Flags: recursesubdirs replacesameversion
; Launcher
Source: ".\InputFilesStd\Simcode.DeltaSim.Launcher\*"; DestDir: "{app}\DeltaSim.Launcher"; Excludes: "*.pdb"; Flags: recursesubdirs replacesameversion
; PlatServer
Source: ".\InputFilesStd\Simcode.DeltaSim.PlatServer\*"; DestDir: "{app}\DeltaSim.PlatServer"; Excludes: "*.pdb"; Flags: recursesubdirs replacesameversion

[Icons]
Name: "{commondesktop}\SDK Тренажер"; Filename: "{app}\DeltaSim.Launcher\Simcode.DeltaSim.Launcher.exe"; 

[Run]
; local group DcsInstructors
Filename: net; Parameters: "localgroup DcsInstructors /add"
Filename: net; Parameters: "localgroup DcsInstructors /comment:""Dcs Инструкторы"""
Filename: net; Parameters: localgroup DcsInstructors {username} /add
; Common
Filename: {app}\Common\Ssz.EditJson.exe; Parameters: """{app}\Dcs.CentralServer_Client\appsettings.json"" CentralServerAddress ""http://{code:GetCentralServerHost}:60060"""; Flags: runhidden
Filename: {app}\Common\Ssz.EditJson.exe; Parameters: """{app}\DeltaSim.Launcher\appsettings.json"" CentralServerAddress ""http://{code:GetCentralServerHost}:60060"""; Flags: runhidden
; Firewall ControlEngine
Filename: netsh; Parameters: "advfirewall firewall delete rule name=""SszDcsControlEngine60061"""; Flags: runhidden
Filename: netsh; Parameters: "advfirewall firewall add rule name=""SszDcsControlEngine60061"" protocol=TCP dir=in localport=60061 action=allow"; Flags: runhidden
; Firewall PlatServer
;Filename: netsh; Parameters: "http add urlacl url=http://+:60080/SimcodePlatServer user=""{code:GetLocalGroupOrUserName|S-1-5-18}"""; Flags: runhidden
Filename: netsh; Parameters: "http add urlacl url=http://+:60080/SimcodePlatServer user=""Все"""; Flags: runhidden
Filename: netsh; Parameters: "http add urlacl url=http://+:60080/SimcodePlatServer user=""Everyone"""; Flags: runhidden
Filename: netsh; Parameters: "advfirewall firewall delete rule name=""SimcodePlatServer60080"""; Flags: runhidden
Filename: netsh; Parameters: "advfirewall firewall delete rule name=""SimcodePlatServer60087"""; Flags: runhidden
Filename: netsh; Parameters: "advfirewall firewall add rule name=""SimcodePlatServer60080"" protocol=TCP dir=in localport=60080 action=allow"; Flags: runhidden
Filename: netsh; Parameters: "advfirewall firewall add rule name=""SimcodePlatServer60087"" protocol=TCP dir=in localport=60087 action=allow"; Flags: runhidden
; PlatServer
; Filename: {app}\Common\vc_redist.x86.exe; Parameters: /quiet; WorkingDir: {app}\Common; StatusMsg: "Установка vc_redist.x86.exe"; Flags: runhidden
Filename: {app}\DeltaSim.PlatServer\Simcode.DeltaSim.PlatServer.exe; Parameters: /RegServer; Flags: runhidden
Filename: regsvr32; Parameters: "/s /c ""{app}\DeltaSim.PlatServer\Simcode.DeltaSim.PlatServerPS.dll"""; Flags: runhidden
; PlatInstructor
;Filename: {app}\Common\01 vc_redist.x86.exe; Parameters: /quiet; WorkingDir: {app}\Common; StatusMsg: "Установка 01 vc_redist.x86.exe"; Flags: runhidden
; Service CentralServer_Client
Filename: sc; Parameters: "create Ssz.Dcs.CentralServer_Client NameToDisplay= ""Ssz.Dcs.CentralServer_Client"" binPath= ""{app}\Dcs.CentralServer_Client\Ssz.Dcs.CentralServer_ClientWindowsService.exe"" start= auto"; Flags: runhidden
Filename: sc; Parameters: "failure Ssz.Dcs.CentralServer_Client reset= 5 actions= restart/5000"; Flags: runhidden
Filename: sc; Parameters: "failureflag Ssz.Dcs.CentralServer_Client 1"; Flags: runhidden
Filename: sc; Parameters: "start Ssz.Dcs.CentralServer_Client"; Flags: runhidden

[UninstallRun]
; Service CentralServer_Client
Filename: sc; Parameters: "stop Ssz.Dcs.CentralServer_Client"; Flags: runhidden
Filename: timeout; Parameters: "/t 20 /nobreak"; Flags: runhidden
Filename: sc; Parameters: "delete Ssz.Dcs.CentralServer_Client"; Flags: runhidden
; Firewall ControlEngine
Filename: netsh; Parameters: "advfirewall firewall delete rule name=""SszDcsControlEngine60061"""; Flags: runhidden
; Firewall PlatServer
Filename: netsh; Parameters: "http delete urlacl url=http://+:60080/SimcodePlatServer"; Flags: runhidden
Filename: netsh; Parameters: "advfirewall firewall delete rule name=""SimcodePlatServer60080"""; Flags: runhidden
Filename: netsh; Parameters: "advfirewall firewall delete rule name=""SimcodePlatServer60087"""; Flags: runhidden
; Unregister PlatServer
Filename: taskkill; Parameters: /F /IM Simcode.DeltaSim.PlatServer.exe; Flags: runhidden
Filename: {app}\DeltaSim.PlatServer\Simcode.DeltaSim.PlatServer.exe; Parameters: /unregserver; Flags: runhidden
Filename: regsvr32; Parameters: "/u /s /c ""{app}\DeltaSim.PlatServer\Simcode.DeltaSim.PlatServerPS.dll"""; Flags: runhidden

[Code]

{Function AllocateAndInitializeSid( pIdentifierAuthority: Byte[], nSubAuthorityCount: Byte,  sa0, sa1, sa2, sa3, sa4, sa5, sa6, sa7 : Dword, pSid :^Byte ) : Integer;
;external 'AllocateAndInitializeSid@Advapi32.dll stdcall' }

{Function ConvertStringSidToSid( StringSid : String; pSid : ^Integer ) : Integer;}
Function ConvertStringSidToSid( StringSid : String; var pSid : LongWord ) : Integer;
#ifdef UNICODE
external 'ConvertStringSidToSidW@Advapi32.dll stdcall setuponly';
#else
external 'ConvertStringSidToSidA@Advapi32.dll stdcall setuponly';
#endif
{Procedure LookupAccountSid( sysName: WideString; pSid : Pointer; lpName : WideString; cchName : ^LongWord; lpReferencedDomainName : WideString; cchReferencedDomainName : ^LongWord, peUse : ^Integer) : Integer;}
Function LookupAccountSid( defNull: LongWord; pSid : LongWord; lpName : String; var cchName : LongWord; lpReferencedDomainName : String; var cchReferencedDomainName : LongWord; var peUse : Integer): Integer;
#ifdef UNICODE
external 'LookupAccountSidW@Advapi32.dll stdcall setuponly';
#else
external 'LookupAccountSidA@Advapi32.dll stdcall setuponly';
#endif
{BOOL WINAPI LookupAccountSid(
  _In_opt_   LPCTSTR lpSystemName,
  _In_       PSID lpSid,
  _Out_opt_  LPTSTR lpName,
  _Inout_    LPDWORD cchName,
  _Out_opt_  LPTSTR lpReferencedDomainName,
  _Inout_    LPDWORD cchReferencedDomainName,
  _Out_      PSID_NAME_USE peUse
)}


{Procedure FreeSid( pSid : Pointer ) ;}
Procedure FreeSid( pSid : LongWord ) ;
external 'FreeSid@Advapi32.dll stdcall setuponly';

Procedure LocalFree( p : LongWord ) ;
external 'LocalFree@Kernel32.dll stdcall setuponly';

                               //                                           "S-1-5-32-544",                "Administrators group");
                               //                                           "S-1-5-32-545",                "Users group");
                               //                                           "S-1-5-32-546",                "Guests group");
                               //                                           "S-1-5-32-547",                "Power Users group");
                               //                                           "S-1-5-18",                                           "System");
                               //                                           "S-1-5-19",                                           "LocalService");
                               //                                           "S-1-5-20",                                           "NetworkService");

Function GetLocalGroupOrUserName( SidString : String ) : String;
var
   Sid : LongWord;
   SidNameUseHolder : Integer;
   NameHolder : String;
   NameSize : LongWord;
   DomainNameHolder : String;
   DomainNameSize : LongWord;
   bResult : Integer;
begin

  Sid := 0;
  NameHolder := StringOfChar( chr(0), 255 );  { allocate buffer }
  NameSize := 254;
  DomainNameHolder := StringOfChar( ' ', 17 );  { allocate buffer }
  DomainNameSize := 15;
  Result:='';

#ifdef DEBUG
  MsgBox('Sid string= ' + SidString, mbInformation, MB_OK);
#endif
  bResult := ConvertStringSidToSid( SidString, Sid );
#ifdef DEBUG
  MsgBox('bResult =  '+IntToStr( bResult), mbInformation, MB_OK);
#endif
  if bResult <> 0 then
  begin
    if LookupAccountSid( 0, Sid, NameHolder, NameSize, DomainNameHolder, DomainNameSize, SidNameUseHolder) <> 0 then
    begin 
#ifdef DEBUG
      MsgBox('Group name =' + NameHolder + ' Domain name =' + DomainNameHolder, mbInformation, MB_OK);
#endif
      Result:=Copy( NameHolder, 0, NameSize);
    end
    else
    begin
#ifdef DEBUG
      MsgBox('LookupAccountSid unsuccessfull', mbInformation, MB_OK);
#endif
    end;
    LocalFree( Sid );
    {FreeSid( Sid );}
  end
  else
  begin
#ifdef DEBUG
    MsgBox('ConvertStringSidToSid unsuccessfull '+IntToStr( Sid), mbInformation, MB_OK)
#endif
  end;
end;

var
  Page: TInputQueryWizardPage;

function GetCentralServerHost(param: String) : String;
var 
  res: String;
begin  
  Result:=Page.Values[0];
end;

procedure InitializeWizard;
begin
  // Create the page
  Page := CreateInputQueryPage(wpWelcome,
  'Имя Сервера Dcs', '',
  'Укажите имя компьютера где установлен Сервер Dcs, затем нажмите "Далее".');

  // Add items (False means it's not a password edit)
  Page.Add('Computer name:', False);
 
  // Set initial values (optional)
  Page.Values[0] := 'localhost'; 
end;

function InitializeSetup(): Boolean;
var
   oldVersion: String;
   uninstaller: String;
   ErrorCode: Integer;
   Install: Cardinal;
   OK: Boolean;   
begin
  // TODO: Add exact version check
  OK := False;
  if RegKeyExists(HKEY_LOCAL_MACHINE,
    'SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full') then
  begin
    RegQueryDWordValue(HKEY_LOCAL_MACHINE,
      'SOFTWARE\Microsoft\NET Framework Setup\NDP\v4\Full',
      'Install', Install);
    if Install = 1 then OK := True;
  end;
  if Not OK Then
  begin
    MsgBox('На этом компьютере не установлен .NET Framework 4.5.2' + Chr(13) + 'Установка {#emit SetupSetting("AppVerName")} невозможна.',
      mbCriticalError, MB_OK);
    Result := False;
    Exit;
  end;
    
  if RegKeyExists(HKEY_LOCAL_MACHINE,
    'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{#emit SetupSetting("AppName")}_is1') then
  begin
    RegQueryStringValue(HKEY_LOCAL_MACHINE,
      'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{#emit SetupSetting("AppName")}_is1',
      'NameToDisplay', oldVersion);
    if MsgBox('На этом компьютере уже установлен ''' + oldVersion + '''.' + Chr(13) + 'Необходимо удалить ранее установленное программное обеспечение перед установкой нового.' + Chr(13) + 'Деинсталировать ''' + oldVersion + ''' и установить ''{#emit SetupSetting("AppVerName")}''?',
      mbConfirmation, MB_YESNO) = IDNO then
    begin
      Result := False;
    end
    else
    begin
      RegQueryStringValue(HKEY_LOCAL_MACHINE,            'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{#emit SetupSetting("AppName")}_is1',
        'UninstallString', uninstaller);
      ShellExec('', uninstaller, '/SILENT', '', SW_HIDE, ewWaitUntilTerminated, ErrorCode);
      Result := True;
    end;
  end
  else

  begin
    Result := True;        
  end;
end;