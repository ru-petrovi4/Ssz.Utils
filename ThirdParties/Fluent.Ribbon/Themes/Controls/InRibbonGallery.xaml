<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:FluentHelpers="clr-namespace:Fluent.Helpers"
                    xmlns:converters="clr-namespace:Fluent.Converters">
    <Style x:Key="InRibbonGalleryToggleButtonStyle"
           TargetType="{x:Type Fluent:ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelTextBrush}" />
        <Setter Property="Height" Value="68" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template" Value="{DynamicResource InRibbonGalleryToggleButtonControlTemplate}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="Auto" />
        <Style.Triggers>
            <Trigger Property="Size" Value="Large">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Large" />
                <Setter Property="Height" Value="68" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
                <Setter Property="Height" Value="22" />
            </Trigger>
            <Trigger Property="Size" Value="Small">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
                <Setter Property="Height" Value="22" />
                <Setter Property="Width" Value="31" />
            </Trigger>
            <Trigger Property="IsSimplified" Value="True">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Medium" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="Padding" Value="6 2 2 2" />
                <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.InRibbonGallery.ToggleButton.Simplified}" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSimplified" Value="True" />
                    <Condition Property="Size" Value="Small" />
                </MultiTrigger.Conditions>
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="InRibbonGalleryToggleButtonControlTemplate"
                     TargetType="{x:Type Fluent:ToggleButton}">
        <Border x:Name="border"
                Height="Auto"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1">
            <Grid Height="Auto">
                <StackPanel x:Name="stackPanel"
                            Width="Auto"
                            Orientation="Vertical">
                    <Fluent:IconPresenter x:Name="iconImage"
                                          Margin="2"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          IconSize="{Binding Path=(Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                          LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />

                    <Fluent:TwoLineLabel x:Name="controlLabel"
                                         Margin="2 -2 2 2"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Stretch"
                                         HasGlyph="True"
                                         Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" />
                </StackPanel>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Size" Value="Small">
                <Setter TargetName="controlLabel" Property="HasTwoLines" Value="False" />
                <Setter TargetName="controlLabel" Property="Margin" Value="-2 0 2 2" />
                <Setter TargetName="controlLabel" Property="Text" Value="" />
                <Setter TargetName="controlLabel" Property="Width" Value="10" />
                <Setter TargetName="iconImage" Property="Margin" Value="1 2 0 2" />
                <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter TargetName="border" Property="VerticalAlignment" Value="Stretch" />
                <Setter TargetName="controlLabel" Property="HasTwoLines" Value="False" />
                <Setter TargetName="controlLabel" Property="Margin" Value="2 -2 2 2" />
                <Setter TargetName="controlLabel" Property="VerticalAlignment" Value="Top" />
                <Setter TargetName="iconImage" Property="Margin" Value="1 2 2 2" />
                <Setter TargetName="iconImage" Property="VerticalAlignment" Value="Center" />
                <Setter TargetName="stackPanel" Property="Orientation" Value="Horizontal" />
                <Setter TargetName="stackPanel" Property="Width" Value="Auto" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="controlLabel" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.InRibbonGallery.ToggleButton.Simplified"
                     TargetType="{x:Type Fluent:ToggleButton}">
        <Border x:Name="border"
                Height="Auto"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="stackPanel"
                  Width="Auto"
                  Height="Auto"
                  Margin="{TemplateBinding Padding}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid x:Name="iconImageGrid"
                      Grid.Column="0"
                      Margin="0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center">
                    <Fluent:IconPresenter x:Name="iconImage"
                                          IconSize="{Binding (Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                          LargeIcon="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                          SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Border x:Name="iconImageBorder"
                            Width="{Binding ActualWidth, ElementName=iconImage}"
                            Height="{Binding ActualHeight, ElementName=iconImage}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                            BorderThickness="1"
                            Visibility="Collapsed" />
                </Grid>
                <Fluent:TwoLineLabel x:Name="controlLabel"
                                     Grid.Column="1"
                                     Margin="2 0 0 0"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     HasGlyph="False"
                                     HasTwoLines="False"
                                     Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" />
                <Fluent:TwoLineLabel x:Name="controlLabel2"
                                     Grid.Column="2"
                                     Margin="0"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Center"
                                     HasGlyph="True"
                                     HasTwoLines="False"
                                     Text="" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Small" />
                    <Condition SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="iconImageBorder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Middle" />
                    <Condition SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="iconImageBorder" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Size" Value="Large" />
                    <Condition SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="controlLabel" Property="Margin" Value="0" />
                <Setter TargetName="iconImage" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>

            <Trigger Property="Size" Value="Small">
                <Setter TargetName="controlLabel" Property="Margin" Value="0" />
                <Setter TargetName="controlLabel" Property="Text" Value="" />
                <Setter TargetName="stackPanel" Property="Margin" Value="4 0 1 0" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter TargetName="controlLabel" Property="Margin" Value="0" />
                <Setter TargetName="controlLabel" Property="Text" Value="" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="controlLabel" Property="Opacity" Value="0.5" />
                <Setter TargetName="controlLabel2" Property="Opacity" Value="0.5" />
                <Setter TargetName="iconImageBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Control.Disabled.BorderBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="InRibbonGalleryButton"
           TargetType="{x:Type Fluent:ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Fluent:ToggleButton}">
                    <Border x:Name="border"
                            Background="{DynamicResource WhiteBrush}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                            BorderThickness="1 1 1 1">
                        <Grid x:Name="grid">
                            <Path Width="7"
                                  Height="1"
                                  Margin="0 6 0 0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Top"
                                  Data="M0,0L1,0"
                                  Fill="{DynamicResource WhiteBrush}"
                                  Stretch="Fill"
                                  Stroke="{DynamicResource BlackBrush}" />
                            <Path Width="5"
                                  Height="3"
                                  Margin="0 8 0 0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Top"
                                  Data="M0,0L1,1 2,0z"
                                  Fill="{DynamicResource BlackBrush}"
                                  Stretch="Fill"
                                  Stroke="{DynamicResource BlackBrush}"
                                  StrokeThickness="0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="grid" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InRibbonGalleryRepeatButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            Background="{DynamicResource WhiteBrush}"
                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                            BorderThickness="1">
                        <ContentPresenter x:Name="contentPresenter" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="InRibbonGalleryControlTemplate"
                     TargetType="{x:Type Fluent:InRibbonGallery}">
        <Grid x:Name="PART_LayoutRoot"
              Width="Auto"
              Height="Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch">
            <Border x:Name="border"
                    Width="Auto"
                    Height="{TemplateBinding GalleryPanelContainerHeight}"
                    Margin="0 0 0 0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                    BorderThickness="1 1 1 1"
                    ClipToBounds="True">
                <Grid Width="Auto"
                      Height="Auto">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Visible">
                        <ScrollViewer.Resources>
                            <Style TargetType="{x:Type ScrollBar}">
                                <Setter Property="ContextMenu" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid>
                                                <StackPanel x:Name="upDownButtonPanel"
                                                            Margin="0 -1 -1 0"
                                                            HorizontalAlignment="Right">
                                                    <RepeatButton x:Name="upButton"
                                                                  Width="15"
                                                                  Height="21"
                                                                  Margin="0 0 0 0"
                                                                  Command="ScrollBar.PageUpCommand"
                                                                  Style="{DynamicResource InRibbonGalleryRepeatButton}">
                                                        <Path Width="5"
                                                              Height="3"
                                                              Data="M0,0 L1,-1 2,0z"
                                                              Fill="{DynamicResource BlackBrush}"
                                                              RenderOptions.EdgeMode="Aliased"
                                                              Stretch="Fill" />
                                                    </RepeatButton>
                                                    <RepeatButton x:Name="downButton"
                                                                  Width="15"
                                                                  Height="21"
                                                                  Margin="0 -1 0 0"
                                                                  Command="ScrollBar.PageDownCommand"
                                                                  Style="{DynamicResource InRibbonGalleryRepeatButton}">
                                                        <Path Width="5"
                                                              Height="3"
                                                              Data="M0,0 L1,1 2,0z"
                                                              Fill="{DynamicResource BlackBrush}"
                                                              RenderOptions.EdgeMode="Aliased"
                                                              Stretch="Fill" />
                                                    </RepeatButton>
                                                </StackPanel>
                                                <Grid x:Name="upDownButtonPanelSimplified"
                                                      Margin="0 -1 -1 -2"
                                                      HorizontalAlignment="Right"
                                                      Visibility="Collapsed">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <RepeatButton x:Name="upButtonSimplified"
                                                                  Grid.Row="0"
                                                                  Width="15"
                                                                  Height="Auto"
                                                                  Margin="0 0 0 -0.5"
                                                                  Command="ScrollBar.PageUpCommand"
                                                                  Style="{DynamicResource InRibbonGalleryRepeatButton}">
                                                        <Path Width="5"
                                                              Height="3"
                                                              Data="M0,0 L1,-1 2,0z"
                                                              Fill="{DynamicResource BlackBrush}"
                                                              RenderOptions.EdgeMode="Aliased"
                                                              Stretch="Fill" />
                                                    </RepeatButton>
                                                    <RepeatButton x:Name="downButtonSimplified"
                                                                  Grid.Row="1"
                                                                  Width="15"
                                                                  Height="Auto"
                                                                  Margin="0 -0.5 0 0"
                                                                  Command="ScrollBar.PageDownCommand"
                                                                  Style="{DynamicResource InRibbonGalleryRepeatButton}">
                                                        <Path Width="5"
                                                              Height="3"
                                                              Data="M0,0 L1,1 2,0z"
                                                              Fill="{DynamicResource BlackBrush}"
                                                              RenderOptions.EdgeMode="Aliased"
                                                              Stretch="Fill" />
                                                    </RepeatButton>
                                                </Grid>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsSimplified, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Fluent:InRibbonGallery}}, FallbackValue=False}" Value="True" />
                                                        <Condition Binding="{Binding IsCollapsed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Fluent:InRibbonGallery}}, FallbackValue=True}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter TargetName="upDownButtonPanel" Property="Visibility" Value="Collapsed" />
                                                    <Setter TargetName="upDownButtonPanelSimplified" Property="Visibility" Value="Visible" />
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ScrollViewer.Resources>

                        <ContentControl x:Name="PART_ContentPresenter"
                                        Focusable="False">
                            <Fluent:GalleryPanel x:Name="PART_GalleryPanel"
                                                 Background="{DynamicResource WhiteBrush}"
                                                 Filter="{TemplateBinding SelectedFilterGroups}"
                                                 GroupBy="{TemplateBinding GroupBy}"
                                                 GroupByAdvanced="{TemplateBinding GroupByAdvanced}"
                                                 IsGrouped="False"
                                                 IsItemsHost="True"
                                                 ItemContainerGenerator="{Binding ItemContainerGenerator, RelativeSource={RelativeSource TemplatedParent}}"
                                                 ItemHeight="{TemplateBinding ItemHeight}"
                                                 ItemWidth="{TemplateBinding ItemWidth}"
                                                 Orientation="{TemplateBinding Orientation}" />
                        </ContentControl>
                    </ScrollViewer>

                    <Fluent:ToggleButton x:Name="PART_ExpandButton"
                                         Width="15"
                                         Height="20"
                                         Margin="0 0 -1 -1"
                                         HorizontalAlignment="Right"
                                         VerticalAlignment="Bottom"
                                         CanAddToQuickAccessToolBar="False"
                                         ClickMode="Press"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         IsDefinitive="False"
                                         Style="{DynamicResource InRibbonGalleryButton}" />

                    <Popup x:Name="PART_Popup"
                           Grid.ColumnSpan="2"
                           Margin="0 0 -4 0"
                           VerticalAlignment="Top"
                           AllowsTransparency="True"
                           CustomPopupPlacementCallback="{x:Static FluentHelpers:PopupHelper.SimplePlacementCallback}"
                           Focusable="False"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           Placement="Custom"
                           PlacementTarget="{Binding ElementName=PART_LayoutRoot}"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <Popup.Resources>
                            <ResourceDictionary>
                                <Style x:Key="{x:Type ScrollBar}"
                                       BasedOn="{StaticResource ScrollBarWhite}"
                                       TargetType="{x:Type ScrollBar}" />
                            </ResourceDictionary>
                        </Popup.Resources>
                        <Grid Name="DropDown"
                              Margin="0"
                              VerticalAlignment="Top"
                              SnapsToDevicePixels="True">
                            <Border x:Name="PART_DropDownBorder"
                                    MinWidth="{Binding ActualWidth, ElementName=PART_LayoutRoot}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top"
                                    Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                                    BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BorderBrush}"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="True">
                                <Grid Width="Auto"
                                      Height="Auto"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Top"
                                      KeyboardNavigation.DirectionalNavigation="Cycle">
                                    <Border Width="Auto"
                                            Height="Auto"
                                            VerticalAlignment="Stretch"
                                            BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.BackgroundBrush}"
                                            BorderThickness="1" />
                                    <Grid Margin="1"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Top">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Rectangle Grid.RowSpan="2"
                                                   Width="1"
                                                   Height="Auto"
                                                   Margin="24 0 0 0"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Stretch"
                                                   Fill="{x:Null}"
                                                   Stretch="Fill"
                                                   Stroke="{DynamicResource Fluent.Ribbon.Brushes.Separator.BorderBrush}"
                                                   Visibility="Visible" />
                                        <Grid x:Name="PART_MenuPanel"
                                              MinWidth="{Binding MinWidth, ElementName=PART_DropDownBorder}"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                              VerticalAlignment="Top">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Border BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                <Grid Width="Auto">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Border x:Name="border_"
                                                            Grid.Row="0"
                                                            Height="13"
                                                            Background="{DynamicResource Fluent.Ribbon.Brushes.Gallery.Header.Background}"
                                                            BorderBrush="{x:Null}"
                                                            BorderThickness="0">
                                                        <Fluent:DropDownButton x:Name="PART_FilterDropDownButton"
                                                                               Height="Auto"
                                                                               HorizontalAlignment="Left"
                                                                               VerticalAlignment="Top"
                                                                               Header="{TemplateBinding SelectedFilterTitle}"
                                                                               Style="{DynamicResource GalleryDropDownButtonStyle}" />
                                                    </Border>
                                                    <ScrollViewer x:Name="PART_ScrollViewer"
                                                                  Grid.Row="1"
                                                                  MinHeight="{Binding ActualHeight, ElementName=PART_LayoutRoot}"
                                                                  Margin="1"
                                                                  BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.BorderBrush}"
                                                                  BorderThickness="0 0 0 1">
                                                        <ContentControl x:Name="PART_PopupContentPresenter"
                                                                        Content="{x:Null}"
                                                                        Focusable="False" />
                                                    </ScrollViewer>
                                                </Grid>
                                            </Border>
                                            <ContentPresenter x:Name="PART_PopupMenuPresenter"
                                                              Grid.Row="1"
                                                              VerticalAlignment="Top"
                                                              ContentSource="Menu"
                                                              KeyboardNavigation.DirectionalNavigation="None" />
                                        </Grid>
                                        <Border x:Name="PART_PopupResizeBorder"
                                                Grid.Row="2"
                                                Height="11"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Top"
                                                Background="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BackgroundBrush}"
                                                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.DropDown.Resize.BorderBrush}"
                                                BorderThickness="0 1 0 0">
                                            <Grid>
                                                <Thumb x:Name="PART_ResizeVerticalThumb"
                                                       Width="Auto"
                                                       Height="10"
                                                       Margin="0 0 0 -90"
                                                       HorizontalAlignment="Stretch"
                                                       VerticalAlignment="Top"
                                                       Cursor="SizeNS"
                                                       Template="{DynamicResource ResizeVerticalThumbControlTemplate}" />
                                                <Thumb x:Name="PART_ResizeBothThumb"
                                                       Width="10"
                                                       Height="10"
                                                       Margin="0 0 0 -90"
                                                       HorizontalAlignment="Right"
                                                       VerticalAlignment="Top"
                                                       Cursor="SizeNWSE"
                                                       Template="{DynamicResource ResizeBothThumbControlTemplate}" />
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Grid>
                    </Popup>
                </Grid>
            </Border>

            <Fluent:ToggleButton x:Name="PART_DropDownButton"
                                 Margin="0 0 0 0"
                                 CanAddToQuickAccessToolBar="False"
                                 ClickMode="Press"
                                 Header="{Binding Path=Header, RelativeSource={RelativeSource TemplatedParent}}"
                                 Icon="{Binding Path=Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                 IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 IsDefinitive="False"
                                 LargeIcon="{Binding Path=LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                 MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                 Size="{Binding Path=Size, RelativeSource={RelativeSource TemplatedParent}}"
                                 SizeDefinition="{Binding Path=SizeDefinition, RelativeSource={RelativeSource TemplatedParent}}"
                                 Style="{DynamicResource InRibbonGalleryToggleButtonStyle}"
                                 Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasFilter" Value="False">
                <Setter TargetName="border_" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_DropDownButton" Property="IsEnabled" Value="False" />
                <Setter TargetName="PART_ExpandButton" Property="IsEnabled" Value="False" />
            </Trigger>
            <Trigger Property="IsCollapsed" Value="True">
                <Setter TargetName="PART_DropDownButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_LayoutRoot" Property="HorizontalAlignment" Value="Left" />
                <Setter TargetName="PART_LayoutRoot" Property="VerticalAlignment" Value="Top" />
                <Setter TargetName="PART_Popup" Property="Placement" Value="Bottom" />
                <Setter TargetName="border" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSimplified" Value="True" />
                    <Condition Property="IsCollapsed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_LayoutRoot" Property="HorizontalAlignment" Value="Stretch" />
                <Setter TargetName="PART_LayoutRoot" Property="VerticalAlignment" Value="Stretch" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSimplified" Value="True" />
                    <Condition Property="IsCollapsed" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ExpandButton" Property="Grid.Column" Value="1" />
            </MultiTrigger>
            <Trigger Property="ResizeMode" Value="None">
                <Setter TargetName="PART_PopupResizeBorder" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ResizeMode" Value="Both">
                <Setter TargetName="PART_PopupResizeBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ResizeMode" Value="Vertical">
                <Setter TargetName="PART_PopupResizeBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ResizeBothThumb" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ResizeVerticalThumb" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Menu" Value="{x:Null}">
                <Setter TargetName="PART_ScrollViewer" Property="BorderThickness" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type Fluent:InRibbonGallery}"
           TargetType="{x:Type Fluent:InRibbonGallery}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Margin" Value="2 3 3 0" />
        <Setter Property="Template" Value="{DynamicResource InRibbonGalleryControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsSimplified" Value="True">
                <Setter Property="GalleryPanelContainerHeight" Value="NaN" />
                <Setter Property="Margin" Value="1 0" />
                <!-- double.NaN=Auto -->
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>