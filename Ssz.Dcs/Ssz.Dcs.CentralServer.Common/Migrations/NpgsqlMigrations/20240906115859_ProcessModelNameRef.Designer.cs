// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ssz.Dcs.CentralServer.Common.EntityFramework;

#nullable disable

namespace Ssz.Dcs.CentralServer.Common.Migrations.NpgsqlMigrations
{
    [DbContext(typeof(NpgsqlDcsCentralServerDbContext))]
    [Migration("20240906115859_ProcessModelNameRef")]
    partial class ProcessModelNameRef
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OperatorSessionScenarioResult", b =>
                {
                    b.Property<long>("OperatorSessionsId")
                        .HasColumnType("bigint");

                    b.Property<long>("ScenarioResultsId")
                        .HasColumnType("bigint");

                    b.HasKey("OperatorSessionsId", "ScenarioResultsId");

                    b.HasIndex("ScenarioResultsId");

                    b.ToTable("OperatorSessionScenarioResult");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.OpCompOperator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("OpCompUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("OpCompUserNameToDisplay")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OpCompUserWindowsUserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("OperatorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OperatorId");

                    b.ToTable("OpCompOperators");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.OperatorSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FinishDateTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("OperatorUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProcessModelingSessionId")
                        .HasColumnType("bigint");

                    b.Property<byte>("Rating")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("StartDateTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("Succeeded")
                        .HasColumnType("boolean");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("OperatorUserId");

                    b.HasIndex("ProcessModelingSessionId");

                    b.ToTable("OperatorSessions");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.ProcessModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Enterprise")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Plant")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProcessModelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProcessModels");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.ProcessModelingSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("FinishDateTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("InstructorUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProcessModelId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDateTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("InstructorUserId");

                    b.HasIndex("ProcessModelId");

                    b.ToTable("ProcessModelingSessions");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.Scenario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("InitialConditionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxPenalty")
                        .HasColumnType("integer");

                    b.Property<long>("ProcessModelId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ScenarioMaxProcessModelTimeSeconds")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ScenarioName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProcessModelId");

                    b.ToTable("Scenarios");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.ScenarioResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("FinishDateTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("FinishProcessModelTimeSeconds")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("InitialConditionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxPenalty")
                        .HasColumnType("integer");

                    b.Property<int>("Penalty")
                        .HasColumnType("integer");

                    b.Property<long>("ProcessModelingSessionId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ScenarioMaxProcessModelTimeSeconds")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("ScenarioName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDateTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("StartProcessModelTimeSeconds")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProcessModelingSessionId");

                    b.ToTable("ScenarioResults");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("DomainUserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PersonnelNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProcessModelNames")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OperatorSessionScenarioResult", b =>
                {
                    b.HasOne("Ssz.Dcs.CentralServer.Common.EntityFramework.OperatorSession", null)
                        .WithMany()
                        .HasForeignKey("OperatorSessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ssz.Dcs.CentralServer.Common.EntityFramework.ScenarioResult", null)
                        .WithMany()
                        .HasForeignKey("ScenarioResultsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.OpCompOperator", b =>
                {
                    b.HasOne("Ssz.Dcs.CentralServer.Common.EntityFramework.User", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.OperatorSession", b =>
                {
                    b.HasOne("Ssz.Dcs.CentralServer.Common.EntityFramework.User", "OperatorUser")
                        .WithMany()
                        .HasForeignKey("OperatorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ssz.Dcs.CentralServer.Common.EntityFramework.ProcessModelingSession", "ProcessModelingSession")
                        .WithMany()
                        .HasForeignKey("ProcessModelingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperatorUser");

                    b.Navigation("ProcessModelingSession");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.ProcessModelingSession", b =>
                {
                    b.HasOne("Ssz.Dcs.CentralServer.Common.EntityFramework.User", "InstructorUser")
                        .WithMany()
                        .HasForeignKey("InstructorUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ssz.Dcs.CentralServer.Common.EntityFramework.ProcessModel", "ProcessModel")
                        .WithMany()
                        .HasForeignKey("ProcessModelId");

                    b.Navigation("InstructorUser");

                    b.Navigation("ProcessModel");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.Scenario", b =>
                {
                    b.HasOne("Ssz.Dcs.CentralServer.Common.EntityFramework.ProcessModel", "ProcessModel")
                        .WithMany("Scenarios")
                        .HasForeignKey("ProcessModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessModel");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.ScenarioResult", b =>
                {
                    b.HasOne("Ssz.Dcs.CentralServer.Common.EntityFramework.ProcessModelingSession", "ProcessModelingSession")
                        .WithMany()
                        .HasForeignKey("ProcessModelingSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessModelingSession");
                });

            modelBuilder.Entity("Ssz.Dcs.CentralServer.Common.EntityFramework.ProcessModel", b =>
                {
                    b.Navigation("Scenarios");
                });
#pragma warning restore 612, 618
        }
    }
}
